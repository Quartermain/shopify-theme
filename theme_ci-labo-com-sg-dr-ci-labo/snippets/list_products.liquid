{% comment %}
This snippet can be used in two different contexts: collection or search results. The major difference is that search results
may return products, but also articles or pages (depending on the settings).
As a consequence, we have some specific code that may be used to display an article or page.
{% endcomment %}

{% if template contains 'search' %}
  {% assign source = search.results %}
  {% assign is_search = true %}
{% else %}
  {% assign source = collection.products %}
  {% assign is_search = false %}
{% endif %}

{% case grid_items_per_row %}
  {% when '2' or 2 %}
    {% assign image_size = '800x' %}

  {% when '3' or 3 %}
    {% assign image_size = '650x' %}

  {% when '4' or 4 %}
    {% assign image_size = '450x' %}

  {% when '5' or 5 %}
    {% assign image_size = '350x' %}

  {% when '6' or 6 %}
    {% assign image_size = '250x' %}
{% endcase %}

{% capture list_of_products %}
  {% for item in source %}
    {% if is_search %}
      {% if item.object_type == 'product' %}
        {% include 'product_item', product: item %}
      {% elsif item.object_type == 'article' %}
        {% include 'article_item', article: item %}
      {% elsif item.object_type == 'page' %}
        {% include 'page_item', page: item %}
      {% endif %}
    {% else %}
      {% include 'product_item', product: item %}
    {% endif %}
  {% endfor %}
{% endcapture %}

{% assign skin_concern = false %}
{% capture dropdown--skin_concern %}
  {% assign options = '' | split: '' %}
  {% assign label = 'Choose skin concern' %}

  {% for tag in collection.all_tags %}
    {% assign _key = tag | slice: -14, 14 | strip | downcase %}
    {% if _key == 'skin concerns' %}
      {% assign _value = tag | split: '' | reverse | join: '' | remove_first: 'snrecnoC nikS' | split: '' | reverse | join: '' | strip %}
      {% if current_tags contains tag %}
        {% assign skin_concern = tag %}
        {% assign label = _value %}
      {% endif %}
      {% assign _handle = tag | handle %}
      {% assign _url = '/collections/all/' | append: _handle %}
      {% unless collection.url == blank %}
        {% assign _url = collection.url | append: '/' | append: _handle %}
      {% endunless %}
      {% assign _option = _value | link_to: _url %}
      {% assign _optionArray = _option | split: '** mediamonk-magic **' %}
      {% assign options = options | concat: _optionArray %}
    {% endif %}
  {% endfor %}
  {% if options.size > 0 %}
    {% include 'dropdown' %}
  {% endif %}
{% endcapture %}

{% capture dropdown--product_category %}
  {% assign options = '' | split: '' %}
  {% assign label = 'Choose product category' %}
  {% assign disable = false %}

  {% for product_type in shop.types %}
    {% comment %}
      Watch for collections with metafield 'filters.disable = true'.
      They will not be displayed in this filter.
    {% endcomment %}
    {% for _c in collections %}
      {% if _c.title == product_type %}
        {% assign disable = _c.metafields.filters['disable'] %}
      {% endif %}
    {% endfor %}

    {% unless disable %}
      {% if collection.title == product_type %}
        {% assign label = product_type %}
      {% endif %}

      {% assign _handle = product_type | handle %}
      {% assign _url = '/collections/' | append: _handle %}
      {% if skin_concern %}
        {% assign _handle = skin_concern | handle %}
        {% assign _url = _url | append: '/' | append: _handle %}
      {% endif %}
      {% assign _option = product_type | link_to: _url %}
      {% assign _optionArray = _option | split: '** mediamonk-magic **' %}
      {% assign options = options | concat: _optionArray %}
    {% endunless %}
  {% endfor %}

  {% comment %}
    Watch for collections with metafield 'filters.product_category != blank'.
    They will not appended to this filter.
  {% endcomment %}
  {% for _c in collections %}
    {% if _c.metafields.filter['product_category'] != blank %}
      {% assign _key = _c.title | strip | downcase %}
      {% if collection.title == _c.title %}
        {% assign label = _c.title %}
      {% endif %}

      {% assign _handle = _c.title | handle %}
      {% assign _url = '/collections/' | append: _handle %}
      {% if skin_concern %}
        {% assign _handle = skin_concern | handle %}
        {% assign _url = _url | append: '/' | append: _handle %}
      {% endif %}
      {% assign _option = _c.title | link_to: _url %}
      {% assign _optionArray = _option | split: '** mediamonk-magic **' %}
      {% assign options = options | concat: _optionArray %}
      {% break %}
    {% endif %}
  {% endfor %}

  {% if options.size > 0 %}
    {% include 'dropdown' %}
  {% endif %}
{% endcapture %}

<div class="products-overview__filter-wrap container">
		<div class="grid grid--middle">
			<div class="1/1--thumb 1/2--lap-and-up grid__cell products-overview__filter">
        {{ dropdown--skin_concern }}
			</div>
			<div class="1/1--thumb 1/2--lap-and-up grid__cell products-overview__filter">
        {{ dropdown--product_category }}
      </div>
		</div>
</div>

{% if template == 'collection.infinite-scroll' or template == 'search.infinite-scroll' %}
  {{ list_of_products }}
{% else %}
  <div class="collection__list collection__list--infinite-scroll grid grid--gallery grid--gallery-large">
    {{ list_of_products }}
  </div>

  {% if paginate.pages > 1 %}
    <!--<a href="#" class="button--white button--full product-list__button">Load More</a>-->

    {% if section.settings.pagination_mode == 'infinite_scrolling' %}
      <div class="collection__loader" data-next-page="{{ paginate.next.url }}&view=infinite-scroll">
        <div class="spinner">
          <div class="spinner__bounce1"></div>
          <div class="spinner__bounce2"></div>
        </div>
      </div>
    {% else %}
      {% include 'pagination' %}
    {% endif %}
  {% endif %}
{% endif %}